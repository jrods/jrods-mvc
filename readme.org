#+Title: My MVC in PHP
#+Author: Jared Smith
#+Email: jared.smith.jrod@gmail.com

* Info
Base on [[https://github.com/panique/mini2]]. There's a couple of structure changes I've made from Mini2. I separated the database code from the Model class. This was done to allow for a single db connection among multiple classes that would need db access, eg User class. Now if any new classes are made, they can, essentially, store a pointer to the db object as a member variable.

* DO NOT use for production
I haven't defined the security model yet (user authentication, authorization, and secure sessions), it's still a work in progress

* Tech
- nginx, apache, lighttpd or any web server that supports fcgi
- PHP 5.4+
  - Slim Framework v2.5
    - will move to v3.0 when released
    - straight forward to use for routing and view integration
  - Twig v1.22
    - Nice HTML template engine
    - cleaner to use than native php for templates
  - PDO
    - clean, easy and more secure than mysqli
- MySQL 5.6.25
  - Will probably move to PostgreSQL or MariaDB in the future

* Why?
- Practice
- Portfolio
- I could use this as a base for any freelance work in the future

* Setup
1. Install php-fpm: http://php.net/manual/en/install.php
   1. Required Modules:
      1. PDO
2. Install a http server: http://nginx.org/ http://projects-old.apache.org/projects/http_server.html http://www.lighttpd.net/
   1. Make sure that fcgi is enabled
   2. I recommend for your http server of choice, to be able to rewrite the uri: http://docs.slimframework.com/routing/rewrite/
   3. I strongly recommend for your http server to also have TLS/SSL enabled, it will be critical for user and admin use
3. Install and configure MySQL: try to use the newest version possible on your preferred platform
   1. Do not use your MySQL root account to access the db in the project.

* Install
1. Clone the repo: =git clone https://github.com/jrods/jrods-mvc.git=
2. Install composer: https://getcomposer.org/doc/00-intro.md
   1. Install dependencies: =php composer.phar install= (cmd depends on your installation)
3. Add the =jrods-mvc/public= directory path to the root var in your http server config
4. Run the =jrods/etc/db_setup.sql= script to setup the db:
   1. =​mysql -h "localhost"= -u "root" "-p" < "jrods-mvc/jrods/etc/db_setup.sql"​= (correct the script path as needed)
5. Copy the =jrods-mvc/jrods/etc/db_config.php.example= file (in the same directory): =cp db_config.php.example db_config.php=
   1. Add your database credentials in the =db_config.php= file
   2. Change the permissions of =db_config.php=, to allow only the user running php-fpm with read access: =chmod 400 db_config.php=
6. Open your web browser to check if you can acces the public url according to your http server configs
7. Fin


